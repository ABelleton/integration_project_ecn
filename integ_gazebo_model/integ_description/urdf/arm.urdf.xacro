<?xml version="1.0"?>
<robot name="arm" xmlns:xacro="http://www.ros.org/wiki/xacro">
	

 <!-- 	___________Geometrical properties___________	-->
 

  <xacro:property name="PI" value="3.14159265359"/>
  <xacro:property name="side" value="0.04"/>
  <xacro:property name="joint_radius" value="0.036"/>
  <xacro:property name="joint_length" value="0.05"/>
  <xacro:property name="length_1" value="0.001"/>
  <xacro:property name="length_2" value="0.8"/>
  <xacro:property name="length_3" value="0.6"/>
  <xacro:property name="mass_1" value="1."/>
  <xacro:property name="mass_2" value="0.5"/>
  <xacro:property name="mass_3" value="0.5"/>
  <xacro:property name="camera_link" value="0.05"/>
  <xacro:property name="axel_offset" value="0.05"/>
  <xacro:property name="height3" value="1"/>

<!-- If you want to use the formula for (ixx, iyy, izz) -->

 <xacro:property name="ixx_f1" value="${(mass_1/12)*(side*side+length_1*length_1)}"/>
 <xacro:property name="iyy_f1" value="${(mass_1/12)*(side*side+length_1*length_1)}"/>
 <xacro:property name="izz_f1" value="${(mass_1/6)*(side*side)}"/>

 <xacro:property name="ixx_f2" value="${(mass_2/12)*(side*side+length_2*length_2)}"/>
 <xacro:property name="iyy_f2" value="${(mass_2/12)*(side*side+length_2*length_2)}"/>
 <xacro:property name="izz_f2" value="${(mass_2/6)*(side*side)}"/>
 
  <xacro:property name="ixx_f3" value="${(mass_3/12)*(side*side+length_3*length_3)}"/>
 <xacro:property name="iyy_f3" value="${(mass_3/12)*(side*side+length_3*length_3)}"/>
 <xacro:property name="izz_f3" value="${(mass_3/6)*(side*side)}"/>

<!-- If you want to enter the values for (ixx, iyy, izz) -->

 <xacro:property name="ixx_v1" value="1."/>
 <xacro:property name="iyy_v1" value="1."/>
 <xacro:property name="izz_v1" value="1."/>

 <xacro:property name="ixx_v2" value="1."/>
 <xacro:property name="iyy_v2" value="1."/>
 <xacro:property name="izz_v2" value="1."/>
 
  <xacro:property name="ixx_v3" value="1."/>
 <xacro:property name="iyy_v3" value="1."/>
 <xacro:property name="izz_v3" value="1."/>




 <!-- 	___________Materials___________	-->


  <material name="orange">
    <color rgba="1.00 0.67 0.02 1.00"/>
  </material>

  <material name="gray">
    <color rgba="0.80 0.80 0.80 1.00"/>
  </material>
  
  <material name="red">
	   <color rgba="0.8 0.0 0.0 1.0"/>
  </material>


 <!-- 	___________Joints Control in Gazebo___________	-->
 

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
    <robotNamespace>/</robotNamespace>
  </gazebo>
  
  
  
  
  
  
  
  <!-- __________________________________________________________JOINT__________________________________________________________ -->



  <!-- 	___________Function to generate a joint___________	-->
  
  <!-- Creating the joint -->
  
  <xacro:macro name="create_joint" params="child parent dist joint_name">

    <joint name="${joint_name}" type="revolute">
      <origin xyz="0 0 ${dist}" rpy="0 0 0"/>
      <parent link="${parent}"/>
      <child link="${child}"/>
      <axis xyz="1 0 0"/>
      <limit effort="100.0"
             velocity="10.0"
             lower="${-PI}"
             upper="${PI}"/>
    </joint>
    
   <!-- Required for ROS control -->
   
    <transmission name="${parent}_${child}_transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${parent}_${child}_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${parent}_${child}_actuator"/>
    </transmission>

  <!--Creating a visual for the joints-->
  
    <joint name="${joint_name}_fixed" type="fixed">
        <origin xyz="0 0 ${dist}" rpy="0 ${PI/2} 0"/>
        <parent link="${parent}"/>
        <child link="${child}_fixed"/>
    </joint>

    <link name="${child}_fixed">
      <visual>
        <geometry>
          <cylinder length="${joint_length}" radius="${joint_radius}"/>
        </geometry>
        <material name="gray"/>
      </visual>
    </link>

 </xacro:macro>
 
 
 
 
 <!-- 	___________Generating the joint___________	-->
  


  <!-- Base_link fixed to world frame  -->
  <!-- To change the orientation of the arm, change the rpy (roll, pitch, yaw) parameter only here -->
  
  <joint name="world_foot_joint" type="fixed">
	<origin xyz="0 0 0" rpy="0 ${PI/2} 0"/>
    <parent link="world"/>
    <child link="base_link"/>
  </joint>


  <!-- Shoulder -->
  
  <xacro:create_joint parent="base_link" child="link1" dist="${length_1}" joint_name="shoulder"/>
  
   <!-- Elbow -->
   
   
  <xacro:create_joint parent="link1" child="link2" dist="${length_2}" joint_name="elbow"/>
  
  
  
  
  
  
  
<!-- __________________________________________________________LINK__________________________________________________________ -->



<!-- 	___________Function to generate a link___________	-->


  <xacro:macro name="create_link" params="side length mass *origin ixx iyy izz">

    <xacro:macro name="prism_geometry">
      <xacro:insert_block name="origin"/>
      <geometry>
        <box size="${side} ${side} ${length}"/>
      </geometry>
    </xacro:macro>

    <visual>
      <xacro:prism_geometry/>
      <material name="orange"/>
    </visual>

    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${ixx}"
               iyy="${iyy}"
               izz="${izz}"
               ixy="0" ixz="0" iyz="0"/>
    </inertial>

  </xacro:macro>
  
  
  
   <!-- 	___________Generating the link___________	-->
   
  
    <!-- World frame (for Gazebo) -->
    
  <link name="world"/>
  
  
   <!-- Base_link -->
   
   
 <link name="base_link">
    <xacro:create_link length="${length_1}" mass = "${mass_1}" side="${side}" ixx="${ixx_f1}" iyy="${iyy_f1}" izz="${izz_f1}">
      <origin xyz="0 0 ${length_1/2}" rpy="0 0 0"/>
    </xacro:create_link>
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

 <!-- Link1 -->
 
  <link name="link1">
    <xacro:create_link length="${length_2}" mass = "${mass_2}" side="${side}" ixx="${ixx_f2}" iyy="${iyy_f2}" izz="${izz_f2}">
      <origin xyz="0 0 ${length_2/2}" rpy="0 0 0"/>
    </xacro:create_link>
  </link>

  <gazebo reference="link1">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- Link2 -->
  
  <link name="link2">
    <xacro:create_link length="${length_3}" mass = "${mass_3}" side="${side}" ixx="${ixx_f3}" iyy="${iyy_f3}" izz="${izz_f3}">
      <origin xyz="0 0 ${length_3/2}" rpy="0 0 0"/>
    </xacro:create_link>
  </link>

  <gazebo reference="link2">
    <material>Gazebo/Red</material>
  </gazebo>
  
  
  
  
  
 <!-- __________________________________________________________CAMERA__________________________________________________________ -->


 
  <!-- Camera not well defined-> go to 0, 0, 0 -->
  
   <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  
   <joint name="camera_joint" type="fixed">
    <origin xyz="0 0 ${length_3}" rpy="${-PI/2} 0 ${-PI/2}"/>
    <parent link="link2"/>
    <child link="camera_link"/>
  </joint>
    
    
  
   <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">      
      <update_rate>30.0</update_rate>
      <camera name="head">
        <!-- Gazebo uses X as the optical axis -->
          <visualize>true</visualize>
          <pose>0 0 0 0 ${-PI/2} ${PI/2}</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>robot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
</robot>
